__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/jose/Documentos/Jose_Proyects/AnimaRN/animation/App.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        App: {
            displayName: "App"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/jose/Documentos/Jose_Proyects/AnimaRN/animation/App.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var instructions = _reactNative.Platform.select({
        ios: 'Press Cmd+R to reload,\n' + 'Cmd+D or shake for dev menu',
        android: 'Double tap R on your keyboard to reload,\n' + 'Shake or press menu button for dev menu'
    });

    var App = _wrapComponent("App")(function (_Component) {
        _inherits(App, _Component);

        function App() {
            _classCallCheck(this, App);

            return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
        }

        _createClass(App, [{
            key: "componentWillMount",
            value: function componentWillMount() {
                var _this2 = this;

                this.animatedValue = new _reactNative.Animated.Value(0);
                this.value = 0;
                this.animatedValue.addListener(function (_ref) {
                    var value = _ref.value;
                    _this2.value = value;
                });
                this.frontInterpolate = this.animatedValue.interpolate({
                    inputRange: [0, 180],
                    outputRange: ['0deg', '180deg']
                });
                this.backInterpolate = this.animatedValue.interpolate({
                    inputRange: [0, 180],
                    outputRange: ['180deg', '360deg']
                });
                this.backOpacity = this.animatedValue.interpolate({
                    inputRange: [89, 90],
                    outputRange: [0, 1]
                });
            }
        }, {
            key: "flipCard",
            value: function flipCard() {
                if (this.value >= 90) {
                    _reactNative.Animated.spring(this.animatedValue, {
                        toValue: 0,
                        friction: 8,
                        tension: 10
                    }).start();
                } else {
                    _reactNative.Animated.spring(this.animatedValue, {
                        toValue: 180,
                        friction: 8,
                        tension: 10
                    }).start();
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this3 = this;

                var frontAnimatedStyle = {
                    transform: [{
                        rotateY: this.frontInterpolate
                    }]
                };
                var backAnimatedStyle = {
                    transform: [{
                        rotateY: this.backInterpolate
                    }],
                    opacity: this.backOpacity
                };
                return _react3.default.createElement(
                    _reactNative.View,
                    {
                        style: styles.container,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 76
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.View,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 77
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Animated.View,
                            {
                                style: [styles.flipCard, frontAnimatedStyle],
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 78
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.Text,
                                {
                                    style: styles.flipText,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 79
                                    }
                                },
                                "This text is flipping on the front."
                            )
                        ),
                        _react3.default.createElement(
                            _reactNative.Animated.View,
                            {
                                style: [backAnimatedStyle, styles.flipCard, styles.flipCardBack],
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 83
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.Text,
                                {
                                    style: styles.flipText,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 84
                                    }
                                },
                                "This text is flipping on the back."
                            )
                        )
                    ),
                    _react3.default.createElement(
                        _reactNative.TouchableOpacity,
                        {
                            onPress: function onPress() {
                                return _this3.flipCard();
                            },
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 89
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 90
                                }
                            },
                            "Flip!"
                        )
                    )
                );
            }
        }]);

        return App;
    }(_react2.Component));

    exports.default = App;

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            alignItems: "center",
            justifyContent: "center"
        },
        flipCard: {
            width: 200,
            height: 200,
            alignItems: 'center',
            justifyContent: 'center',
            backgroundColor: 'blue',
            backfaceVisibility: 'hidden'
        },
        flipCardBack: {
            backgroundColor: "red",
            position: "absolute",
            top: 0
        },
        flipText: {
            width: 90,
            fontSize: 20,
            color: 'white',
            fontWeight: 'bold'
        }
    });
});